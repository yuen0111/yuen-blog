{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/yuanko/Developer/html-css-course/personal-blog/components/post-card.tsx"],"sourcesContent":["import Link from 'next/link';\nimport type { PostMetadata } from '@/lib/posts';\n\nexport function PostCard({ post }: { post: PostMetadata }) {\n  return (\n    <article className=\"group rounded-2xl border border-slate-200 bg-white/80 p-6 shadow-sm transition hover:-translate-y-1 hover:shadow-lg\">\n      <header className=\"mb-4 flex flex-col gap-2\">\n        <time className=\"text-xs uppercase tracking-wide text-slate-500\">\n          {post.publishedAt}\n        </time>\n        <Link href={`/posts/${post.slug}`} className=\"text-xl font-semibold text-slate-900\">\n          {post.title}\n        </Link>\n        {post.summary ? (\n          <p className=\"text-sm text-slate-600\">{post.summary}</p>\n        ) : null}\n      </header>\n      <footer className=\"flex flex-wrap gap-2\">\n        {post.tags.map((tag) => (\n          <span\n            key={tag}\n            className=\"inline-flex items-center rounded-full border border-sky-200 bg-sky-50 px-3 py-1 text-xs font-medium text-sky-700\"\n          >\n            #{tag}\n          </span>\n        ))}\n      </footer>\n    </article>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAGO,SAAS,SAAS,EAAE,IAAI,EAA0B;IACvD,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAK,WAAU;kCACb,KAAK,WAAW;;;;;;kCAEnB,8OAAC,uKAAI;wBAAC,MAAM,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;wBAAE,WAAU;kCAC1C,KAAK,KAAK;;;;;;oBAEZ,KAAK,OAAO,iBACX,8OAAC;wBAAE,WAAU;kCAA0B,KAAK,OAAO;;;;;+BACjD;;;;;;;0BAEN,8OAAC;gBAAO,WAAU;0BACf,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,oBACd,8OAAC;wBAEC,WAAU;;4BACX;4BACG;;uBAHG;;;;;;;;;;;;;;;;AASjB","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/yuanko/Developer/html-css-course/personal-blog/lib/posts.ts"],"sourcesContent":["import fs from 'node:fs/promises';\nimport path from 'node:path';\nimport matter from 'gray-matter';\nimport { compileMDX } from 'next-mdx-remote/rsc';\nimport remarkGfm from 'remark-gfm';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport { cache, type ReactNode } from 'react';\n\nconst POSTS_DIR = path.join(process.cwd(), 'content/posts');\n\nexport interface PostFrontmatter {\n  title: string;\n  summary?: string;\n  publishedAt: string;\n  tags?: string[];\n  draft?: boolean;\n}\n\nexport interface PostMetadata {\n  slug: string;\n  title: string;\n  summary: string;\n  publishedAt: string;\n  tags: string[];\n}\n\nexport interface Post extends PostMetadata {\n  content: ReactNode;\n}\n\nfunction isPostFrontmatter(value: unknown): value is PostFrontmatter {\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n\n  const data = value as Record<string, unknown>;\n\n  return typeof data.title === 'string' && typeof data.publishedAt === 'string';\n}\n\nasync function readPostFile(slug: string) {\n  const filePath = path.join(POSTS_DIR, `${slug}.mdx`);\n  return fs.readFile(filePath, 'utf8');\n}\n\nasync function listPostFiles(): Promise<string[]> {\n  const files = await fs.readdir(POSTS_DIR);\n  return files\n    .filter((file: string) => file.endsWith('.mdx'))\n    .map((file: string) => file.replace(/\\.mdx$/, ''));\n}\n\nfunction normalizeMetadata(slug: string, data: PostFrontmatter): PostMetadata {\n  return {\n    slug,\n    title: data.title,\n    summary: data.summary ?? '',\n    publishedAt: data.publishedAt,\n    tags: data.tags ?? []\n  };\n}\n\nexport const getAllPosts = cache(async (): Promise<PostMetadata[]> => {\n  const slugs = await listPostFiles();\n  const posts = await Promise.all(\n    slugs.map(async (slug: string) => {\n      const source = await readPostFile(slug);\n      const { data } = matter(source);\n\n      if (!isPostFrontmatter(data) || data.draft) {\n        return null;\n      }\n\n      return normalizeMetadata(slug, data);\n    })\n  );\n\n  return posts\n    .filter((post): post is PostMetadata => Boolean(post))\n    .sort(\n      (a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime()\n    );\n});\n\nexport async function getPostBySlug(slug: string): Promise<Post> {\n  const source = await readPostFile(slug);\n\n  const { content, frontmatter } = await compileMDX<PostFrontmatter>({\n    source,\n    options: {\n      parseFrontmatter: true,\n      mdxOptions: {\n        remarkPlugins: [remarkGfm],\n        rehypePlugins: [rehypeSlug, [rehypeAutolinkHeadings, { behavior: 'wrap' }]]\n      }\n    }\n  });\n\n  if (!isPostFrontmatter(frontmatter) || frontmatter.draft) {\n    throw new Error(`Post \"${slug}\" is missing required frontmatter.`);\n  }\n\n  return {\n    ...normalizeMetadata(slug, frontmatter),\n    content\n  };\n}\n\nexport const getPostSlugs = cache(async () => listPostFiles());\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA,MAAM,YAAY,4HAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAsB3C,SAAS,kBAAkB,KAAc;IACvC,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,MAAM,OAAO;IAEb,OAAO,OAAO,KAAK,KAAK,KAAK,YAAY,OAAO,KAAK,WAAW,KAAK;AACvE;AAEA,eAAe,aAAa,IAAY;IACtC,MAAM,WAAW,4HAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,CAAC;IACnD,OAAO,gJAAE,CAAC,QAAQ,CAAC,UAAU;AAC/B;AAEA,eAAe;IACb,MAAM,QAAQ,MAAM,gJAAE,CAAC,OAAO,CAAC;IAC/B,OAAO,MACJ,MAAM,CAAC,CAAC,OAAiB,KAAK,QAAQ,CAAC,SACvC,GAAG,CAAC,CAAC,OAAiB,KAAK,OAAO,CAAC,UAAU;AAClD;AAEA,SAAS,kBAAkB,IAAY,EAAE,IAAqB;IAC5D,OAAO;QACL;QACA,OAAO,KAAK,KAAK;QACjB,SAAS,KAAK,OAAO,IAAI;QACzB,aAAa,KAAK,WAAW;QAC7B,MAAM,KAAK,IAAI,IAAI,EAAE;IACvB;AACF;AAEO,MAAM,cAAc,IAAA,8MAAK,EAAC;IAC/B,MAAM,QAAQ,MAAM;IACpB,MAAM,QAAQ,MAAM,QAAQ,GAAG,CAC7B,MAAM,GAAG,CAAC,OAAO;QACf,MAAM,SAAS,MAAM,aAAa;QAClC,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,kJAAM,EAAC;QAExB,IAAI,CAAC,kBAAkB,SAAS,KAAK,KAAK,EAAE;YAC1C,OAAO;QACT;QAEA,OAAO,kBAAkB,MAAM;IACjC;IAGF,OAAO,MACJ,MAAM,CAAC,CAAC,OAA+B,QAAQ,OAC/C,IAAI,CACH,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,WAAW,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,WAAW,EAAE,OAAO;AAEnF;AAEO,eAAe,cAAc,IAAY;IAC9C,MAAM,SAAS,MAAM,aAAa;IAElC,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,MAAM,IAAA,sKAAU,EAAkB;QACjE;QACA,SAAS;YACP,kBAAkB;YAClB,YAAY;gBACV,eAAe;oBAAC,wJAAS;iBAAC;gBAC1B,eAAe;oBAAC,yJAAU;oBAAE;wBAAC,yKAAsB;wBAAE;4BAAE,UAAU;wBAAO;qBAAE;iBAAC;YAC7E;QACF;IACF;IAEA,IAAI,CAAC,kBAAkB,gBAAgB,YAAY,KAAK,EAAE;QACxD,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,kCAAkC,CAAC;IACnE;IAEA,OAAO;QACL,GAAG,kBAAkB,MAAM,YAAY;QACvC;IACF;AACF;AAEO,MAAM,eAAe,IAAA,8MAAK,EAAC,UAAY","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///Users/yuanko/Developer/html-css-course/personal-blog/app/page.tsx"],"sourcesContent":["import { PostCard } from '@/components/post-card';\nimport { getAllPosts, type PostMetadata } from '@/lib/posts';\nimport { siteConfig } from '@/lib/site-config';\n\nexport default async function HomePage() {\n  const posts = await getAllPosts();\n\n  return (\n    <div className=\"space-y-12\">\n      <section className=\"space-y-4\">\n        <p className=\"text-sm uppercase tracking-[0.3em] text-sky-600\">Hello, world</p>\n        <h1 className=\"text-3xl font-bold text-slate-900 sm:text-4xl\">\n          {siteConfig.author} 的创作实验室\n        </h1>\n        <p className=\"max-w-2xl text-base text-slate-600\">\n          {siteConfig.description}\n        </p>\n      </section>\n\n      <section className=\"space-y-6\">\n        <h2 className=\"text-2xl font-semibold text-slate-900\">最新文章</h2>\n        {posts.length ? (\n          <div className=\"grid gap-6\">\n            {posts.map((post: PostMetadata) => (\n              <div key={post.slug}>\n                <PostCard post={post} />\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-sm text-slate-500\">第一篇文章还在路上，敬请期待。</p>\n        )}\n      </section>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;;;;AAEe,eAAe;IAC5B,MAAM,QAAQ,MAAM,IAAA,2HAAW;IAE/B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAE,WAAU;kCAAkD;;;;;;kCAC/D,8OAAC;wBAAG,WAAU;;4BACX,mIAAU,CAAC,MAAM;4BAAC;;;;;;;kCAErB,8OAAC;wBAAE,WAAU;kCACV,mIAAU,CAAC,WAAW;;;;;;;;;;;;0BAI3B,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;oBACrD,MAAM,MAAM,iBACX,8OAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;0CACC,cAAA,8OAAC,uIAAQ;oCAAC,MAAM;;;;;;+BADR,KAAK,IAAI;;;;;;;;;6CAMvB,8OAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;;;;;;;AAKhD","debugId":null}}]
}